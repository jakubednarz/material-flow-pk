version: "3.8"

services:

  auth-service:
    build: ./services/auth-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./services/auth-service/:/app/
    ports:
      - 8005:8000
    env_file:
      - .env
    depends_on:
      - database
      - users-service
    networks:
      - material-flow-network

  users-service:
    build: ./services/users-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./services/users-service/:/app/
    ports:
      - 8001:8000
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - material-flow-network

  warehouse-service:
    build: ./services/warehouse-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./services/warehouse-service/:/app/
    ports:
      - 8002:8000
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - material-flow-network

  orders-service:
    build: ./services/orders-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./services/orders-service/:/app/
    ports:
      - 8003:8000
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - material-flow-network

  analytics-service:
    build: ./services/analytics-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./services/analytics-service/:/app/
    ports:
      - 8004:8000
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - material-flow-network

  database:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - material-flow-network

  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - users-service
      - warehouse-service
      - orders-service
      - analytics-service
    networks:
      - material-flow-network

networks:
  material-flow-network:
    driver: bridge

volumes:
  pgdata: